from copent import mcpd
import numpy as np
from numpy.random import multivariate_normal as mnorm
import ruptures as rpt

n1 = 50
print(":: univariate cases ::")
print("\n>> change points in mean : [50,100,150]")
x1 = np.random.normal(0,1,n1)
x2 = np.random.normal(5,1,n1)
x3 = np.random.normal(10,1,n1)
x4 = np.random.normal(1,1,n1)
x = np.concatenate((x1,x2,x3,x4))
pos,maxstat = mcpd(x)
print("copent.mcpd: ", pos)
#print("stats of change points: ", maxstat)
rpt1 = rpt.Dynp(model="l2").fit(x).predict(n_bkps = 4)
print("ruptures.DynP: ", rpt1)
rpt2 = rpt.Pelt(model = "rbf").fit(x).predict(pen = 3)
print("ruptures.Pelt: ", rpt2)
rpt3a = rpt.KernelCPD(kernel = "rbf").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(rbf): ", rpt3a)
rpt3b = rpt.KernelCPD(kernel = "linear").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(linear): ", rpt3b)
rpt3c = rpt.KernelCPD(kernel = "cosine").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(cosine): ", rpt3c)
rpt4 = rpt.Binseg(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Binseg: ", rpt4)
rpt5 = rpt.BottomUp(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.BottomUp: ", rpt5)
rpt6 = rpt.Window(width=40, model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Window: ", rpt6)

print("\n>> change points in mean-var : [50,100,150]")
x1 = np.random.normal(0,1,n1)
x2 = np.random.normal(5,3,n1)
x3 = np.random.normal(10,1,n1)
x4 = np.random.normal(3,10,n1)
x = np.concatenate((x1,x2,x3,x4))
pos,maxstat = mcpd(x)
print("copent.mcpd: ", pos)
#print("stats of change points: ", maxstat)
rpt1 = rpt.Dynp(model="l2").fit(x).predict(n_bkps = 4)
print("ruptures.DynP: ", rpt1)
rpt2 = rpt.Pelt(model = "rbf").fit(x).predict(pen = 3)
print("ruptures.Pelt: ", rpt2)
rpt3a = rpt.KernelCPD(kernel = "rbf").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(rbf): ", rpt3a)
rpt3b = rpt.KernelCPD(kernel = "linear").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(linear): ", rpt3b)
rpt3c = rpt.KernelCPD(kernel = "cosine").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(cosine): ", rpt3c)
rpt4 = rpt.Binseg(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Binseg: ", rpt4)
rpt5 = rpt.BottomUp(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.BottomUp: ", rpt5)
rpt6 = rpt.Window(width=40, model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Window: ", rpt6)

n1 = 100
print("\n>> change points in var : [100,200,300]")
x1 = np.random.normal(0,1,n1)
x2 = np.random.normal(0,10,n1)
x3 = np.random.normal(0,5,n1)
x4 = np.random.normal(0,1,n1)
x = np.concatenate((x1,x2,x3,x4))
pos,maxstat = mcpd(x,thd=0.08)
print("copent.mcpd: ", pos)
#print("stats of change points: ", maxstat)
rpt1 = rpt.Dynp(model="l2").fit(x).predict(n_bkps = 4)
print("ruptures.DynP: ", rpt1)
rpt2 = rpt.Pelt(model = "rbf").fit(x).predict(pen = 3)
print("ruptures.Pelt: ", rpt2)
rpt3a = rpt.KernelCPD(kernel = "rbf").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(rbf): ", rpt3a)
rpt3b = rpt.KernelCPD(kernel = "linear").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(linear): ", rpt3b)
rpt3c = rpt.KernelCPD(kernel = "cosine").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(cosine): ", rpt3c)
rpt4 = rpt.Binseg(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Binseg: ", rpt4)
rpt5 = rpt.BottomUp(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.BottomUp: ", rpt5)
rpt6 = rpt.Window(width=40, model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Window: ", rpt6)

n1 = 50
print("\n:: multivariate cases ::")
print("\n>> change points in mean : [50,100,150]")
x1 = mnorm([0,0],[[1,0],[0,1]],n1)
x2 = mnorm([10,10],[[1,0],[0,1]],n1)
x3 = mnorm([5,5],[[1,0],[0,1]],n1)
x4 = mnorm([1,1],[[1,0],[0,1]],n1)
x = np.concatenate((x1,x2,x3,x4))
pos,maxstat = mcpd(x)
print("copent.mcpd: ", pos)
#print("stats of change points: ", maxstat)
rpt1 = rpt.Dynp(model="l2").fit(x).predict(n_bkps = 4)
print("ruptures.DynP: ", rpt1)
rpt2 = rpt.Pelt(model = "rbf").fit(x).predict(pen = 3)
print("ruptures.Pelt: ", rpt2)
rpt3a = rpt.KernelCPD(kernel = "rbf").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(rbf): ", rpt3a)
rpt3b = rpt.KernelCPD(kernel = "linear").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(linear): ", rpt3b)
rpt3c = rpt.KernelCPD(kernel = "cosine").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(cosine): ", rpt3c)
rpt4 = rpt.Binseg(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Binseg: ", rpt4)
rpt5 = rpt.BottomUp(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.BottomUp: ", rpt5)
rpt6 = rpt.Window(width=40, model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Window: ", rpt6)

print("\n>> change points in mean-var : [50,100,150]")
x1 = mnorm([0,0],[[1,0.2],[0.2,1]],n1)
x2 = mnorm([10,10],[[1,0.8],[0.8,1]],n1)
x3 = mnorm([5,5],[[1,0.1],[0.1,1]],n1)
x4 = mnorm([1,1],[[1,0.9],[0.9,1]],n1)
x = np.concatenate((x1,x2,x3,x4))
pos,maxstat = mcpd(x)
print("copent.mcpd: ", pos)
#print("stats of change points: ", maxstat)
rpt1 = rpt.Dynp(model="l2").fit(x).predict(n_bkps = 4)
print("ruptures.DynP: ", rpt1)
rpt2 = rpt.Pelt(model = "rbf").fit(x).predict(pen = 3)
print("ruptures.Pelt: ", rpt2)
rpt3a = rpt.KernelCPD(kernel = "rbf").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(rbf): ", rpt3a)
rpt3b = rpt.KernelCPD(kernel = "linear").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(linear): ", rpt3b)
rpt3c = rpt.KernelCPD(kernel = "cosine").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(cosine): ", rpt3c)
rpt4 = rpt.Binseg(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Binseg: ", rpt4)
rpt5 = rpt.BottomUp(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.BottomUp: ", rpt5)
rpt6 = rpt.Window(width=40, model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Window: ", rpt6)

n1 = 100
print("\n>> change points in var : [100,200,300]")
x1 = mnorm([0,0],[[1,0.2],[0.2,1]],n1)
x2 = mnorm([0,0],[[1,0.9],[0.9,1]],n1)
x3 = mnorm([0,0],[[1,0.1],[0.1,1]],n1)
x4 = mnorm([0,0],[[1,0.8],[0.8,1]],n1)
x = np.concatenate((x1,x2,x3,x4))
pos,maxstat = mcpd(x,thd=0.05)
print("copent.mcpd: ", pos)
#print("stats of change points: ", maxstat)
rpt1 = rpt.Dynp(model="l2").fit(x).predict(n_bkps = 4)
print("ruptures.DynP: ", rpt1)
rpt2 = rpt.Pelt(model = "rbf").fit(x).predict(pen = 3)
print("ruptures.Pelt: ", rpt2)
rpt3a = rpt.KernelCPD(kernel = "rbf").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(rbf): ", rpt3a)
rpt3b = rpt.KernelCPD(kernel = "linear").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(linear): ", rpt3b)
rpt3c = rpt.KernelCPD(kernel = "cosine").fit(x).predict(n_bkps = 3)
print("ruptures.KernelCPD(cosine): ", rpt3c)
rpt4 = rpt.Binseg(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Binseg: ", rpt4)
rpt5 = rpt.BottomUp(model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.BottomUp: ", rpt5)
rpt6 = rpt.Window(width=40, model = "rbf").fit(x).predict(n_bkps = 4)
print("ruptures.Window: ", rpt6)

